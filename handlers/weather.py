from create_bot import dp, bot
from aiogram import types
from aiogram.dispatcher import Dispatcher
from config import open_weather_token
from keyboards import kb_weather

import datetime
import requests

async def get_city(message : types.Message):
	await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")

async def get_weather(message : types.Message):
	# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–º–π–ª–æ–≤
	code_to_smile = {
        "Clear": "‚òÄ –Ø—Å–Ω–æ",
        "Clouds": "‚òÅ –û–±–ª–∞—á–Ω–æ",
        "Rain": "‚òî –î–æ–∂–¥—å",
        "Drizzle": "‚òî –î–æ–∂–¥—å",
        "Thunderstorm": "‚õà –ì—Ä–æ–∑–∞",
        "Snow": "‚ùÑ –°–Ω–µ–≥",
        "Mist": "üå´ –¢—É–º–∞–Ω"
    }

	try:
		# –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≥–æ—Ä–æ–¥–∞
		loc = requests.get(
			f"http://api.openweathermap.org/geo/1.0/direct?q={message.text}&limit=5&appid={open_weather_token}"
		)
		loc = loc.json()

		lat = loc[0]['lat']
		lon = loc[0]['lon']

		r = requests.get(
			f"https://api.openweathermap.org/data/2.5/onecall?lat={lat}&lon={lon}&exclude=current,minutely,daily&appid={open_weather_token}&units=metric&lang=ru"
		)
		data = r.json()
		final = ""
		for i in range(16):
			dtime = datetime.datetime.fromtimestamp(data['hourly'][i]['dt'])
			time = dtime.strftime('%H:%M')
			desc = data['hourly'][i]['weather'][0]['main']
			try: 
				desc_emoji = code_to_smile[desc]
			except: 
				desc_emoji = desc
			temp = round(data['hourly'][i]['temp'])
			humidity = data['hourly'][i]['humidity']
			wind = round(data['hourly'][i]['wind_speed'])
			text = str(f'{time} {desc_emoji} üå° {temp}¬∞C üíß{humidity}% üí® {wind}–º/—Å\n')
			final = final + text
		await message.reply(final)
	except:
		await message.reply("üî¥ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ üî¥")

def register_handlers_weather(dp : Dispatcher):
	dp.register_message_handler(get_city, lambda message: '–ì–æ—Ä–æ–¥' in message.text)
	dp.register_message_handler(get_weather)